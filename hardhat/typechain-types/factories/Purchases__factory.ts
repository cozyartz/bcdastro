/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Purchases, PurchasesInterface } from "../Purchases";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "mediaId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePaid",
        type: "uint256",
      },
    ],
    name: "PurchaseRecorded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mediaId",
        type: "string",
      },
    ],
    name: "getPurchases",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "string",
            name: "mediaId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "pricePaid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Purchases.Purchase[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "purchases",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "string",
        name: "mediaId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePaid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mediaId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePaid",
        type: "uint256",
      },
    ],
    name: "recordPurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107b28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638f148a35146100465780639607e07514610072578063af193ad514610092575b600080fd5b610059610054366004610452565b6100a7565b60405161006994939291906104e7565b60405180910390f35b61008561008036600461051e565b610192565b604051610069919061055b565b6100a56100a0366004610452565b6102cb565b005b815160208184018101805160008252928201918501919091209190528054829081106100d257600080fd5b6000918252602090912060049091020180546001820180546001600160a01b039092169450919250610103906105f6565b80601f016020809104026020016040519081016040528092919081815260200182805461012f906105f6565b801561017c5780601f106101515761010080835404028352916020019161017c565b820191906000526020600020905b81548152906001019060200180831161015f57829003601f168201915b5050505050908060020154908060030154905084565b60606000826040516101a49190610630565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156102c057600084815260209081902060408051608081019091526004850290910180546001600160a01b03168252600181018054929391929184019161021b906105f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610247906105f6565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b5050505050815260200160028201548152602001600382015481525050815260200190600101906101d2565b505050509050919050565b6000826040516102db9190610630565b9081526040805160209281900383018120608082018352338252838201868152928201859052426060830152805460018082018355600092835294909120825160049092020180546001600160a01b0319166001600160a01b039092169190911781559151909282019061034f908261069b565b5060408201518160020155606082015181600301555050336001600160a01b03167f3e413969cd9a31e13306194dd80b13b07043ada39ecb0399c8b11535faa2032e83836040516103a192919061075a565b60405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103d457600080fd5b813567ffffffffffffffff8111156103ee576103ee6103ad565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561041d5761041d6103ad565b60405281815283820160200185101561043557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561046557600080fd5b823567ffffffffffffffff81111561047c57600080fd5b610488858286016103c3565b95602094909401359450505050565b60005b838110156104b257818101518382015260200161049a565b50506000910152565b600081518084526104d3816020860160208601610497565b601f01601f19169290920160200192915050565b6001600160a01b038516815260806020820181905260009061050b908301866104bb565b6040830194909452506060015292915050565b60006020828403121561053057600080fd5b813567ffffffffffffffff81111561054757600080fd5b610553848285016103c3565b949350505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156105ea57868503603f19018452815180516001600160a01b031686526020808201516080918801829052906105be908801826104bb565b604083810151908901526060928301519290970191909152506020938401939190910190600101610583565b50929695505050505050565b600181811c9082168061060a57607f821691505b60208210810361062a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610642818460208701610497565b9190910192915050565b601f82111561069657806000526020600020601f840160051c810160208510156106735750805b601f840160051c820191505b81811015610693576000815560010161067f565b50505b505050565b815167ffffffffffffffff8111156106b5576106b56103ad565b6106c9816106c384546105f6565b8461064c565b6020601f8211600181146106fd57600083156106e55750848201515b600019600385901b1c1916600184901b178455610693565b600084815260208120601f198516915b8281101561072d578785015182556020948501946001909201910161070d565b508482101561074b5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60408152600061076d60408301856104bb565b9050826020830152939250505056fea2646970667358221220dfeb1c28e9061244e572058ecf5ce5b16ce01efabfc0054da01546312bfd39f764736f6c634300081c0033";

type PurchasesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PurchasesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Purchases__factory extends ContractFactory {
  constructor(...args: PurchasesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Purchases & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Purchases__factory {
    return super.connect(runner) as Purchases__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PurchasesInterface {
    return new Interface(_abi) as PurchasesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Purchases {
    return new Contract(address, _abi, runner) as unknown as Purchases;
  }
}
